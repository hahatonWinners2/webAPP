"""add client fields

Revision ID: 160baaef07bb
Revises: 
Create Date: 2025-05-24 16:54:01.418391

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '160baaef07bb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Name of the client'),
    sa.Column('address', sa.String(length=255), nullable=False, comment="Client's address"),
    sa.Column('description', sa.String(length=500), nullable=True, comment='Description of the client'),
    sa.Column('suspicion', sa.Integer(), nullable=False, comment='Suspicion level (0-100%)'),
    sa.Column('buildingType', sa.String(length=100), nullable=True, comment='Type of the building'),
    sa.Column('roomsCount', sa.Integer(), nullable=True, comment='Number of rooms'),
    sa.Column('residentsCount', sa.Integer(), nullable=True, comment='Number of residents'),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_client')),
    schema='public'
    )
    op.create_index(op.f('ix_public_client_name'), 'client', ['name'], unique=False, schema='public')
    op.create_table('monthly_consumption',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('consumption', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['public.client.id'], name=op.f('fk_monthly_consumption_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_monthly_consumption')),
    schema='public'
    )
    op.create_index(op.f('ix_public_monthly_consumption_client_id'), 'monthly_consumption', ['client_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_monthly_consumption_date'), 'monthly_consumption', ['date'], unique=False, schema='public')
    op.create_table('suspicious_client',
    sa.Column('client_id', sa.UUID(), nullable=False, comment='Reference to client'),
    sa.Column('company', sa.String(length=255), nullable=False, comment='Company name'),
    sa.Column('checked', sa.Boolean(), nullable=False, comment='Whether the client has been checked'),
    sa.Column('comment', sa.String(length=500), nullable=True, comment='Additional comments'),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['public.client.id'], name=op.f('fk_suspicious_client_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_suspicious_client')),
    schema='public'
    )
    op.create_index(op.f('ix_public_suspicious_client_client_id'), 'suspicious_client', ['client_id'], unique=False, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_public_suspicious_client_client_id'), table_name='suspicious_client', schema='public')
    op.drop_table('suspicious_client', schema='public')
    op.drop_index(op.f('ix_public_monthly_consumption_date'), table_name='monthly_consumption', schema='public')
    op.drop_index(op.f('ix_public_monthly_consumption_client_id'), table_name='monthly_consumption', schema='public')
    op.drop_table('monthly_consumption', schema='public')
    op.drop_index(op.f('ix_public_client_name'), table_name='client', schema='public')
    op.drop_table('client', schema='public')
    # ### end Alembic commands ###
